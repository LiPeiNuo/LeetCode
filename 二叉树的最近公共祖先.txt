/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    private TreeNode lca = null;
    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {
        if(root == null){
            return null;
        }
        findNode(root, p , q);
        return lca;
    }
    private boolean findNode( TreeNode root, TreeNode p, TreeNode q){
        if(root == null){
            return false;
        }
        int left = findNode(root.left, p , q)? 1: 0;
        int right = findNode(root.right, p ,q)? 1: 0;
        int mid = (p == root || q == root) ? 1 : 0;
        if( left + right + mid >= 2){
            lca = root;
        }
        return right + left + mid > 0;
    }
}